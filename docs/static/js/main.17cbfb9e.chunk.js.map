{"version":3,"sources":["components/NewsCard.js","components/PostsGrid.js","components/Header.js","components/SidebarDrawer.js","App.js","serviceWorker.js","index.js"],"names":["NewsCard","_this$props","this","props","classes","post","react_default","a","createElement","className","root","href","url","target","rel","Card_default","card","CardActionArea_default","CardMedia_default","component","alt","title","media","height","image","urlToImage","CardContent_default","Typography_default","gutterBottom","variant","description","content","CardActions_default","Chip_default","label","format","publishedAt","chip","color","React","Component","withStyles","flexGrow","margin","grow","menuButton","marginLeft","marginRight","textDecoration","maxWidth","objectFit","minHeight","masonryOptions","transitionDuration","Posts","posts","cards","map","index","components_NewsCard","key","lib_default","grid","options","padding","Header","flag","toggleDrawer","_this","AppBar_default","position","Toolbar_default","IconButton_default","onClick","aria-label","Menu_default","SidebarDrawer","route","console","log","fetchFromRoute","sideList","list","List_default","ListItem_default","button","ListItemIcon_default","Grade_default","ListItemText_default","primary","LineStyle_default","Divider_default","Drawer_default","open","left","onClose","tabIndex","role","onKeyDown","theme","createMuiTheme","typography","useNextVariants","palette","blue","newsRoutes","topHeadlines","everything","fetchNews","axios","get","concat","then","res","catch","error","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","loading","_this2","status","data","articles","setState","_this3","styles","components_SidebarDrawer","components_Header","LinearProgress_default","PostsGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6aAoCMA,mLACK,IAAAC,EACmBC,KAAKC,MAAvBC,EADDH,EACCG,QAASC,EADVJ,EACUI,KAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQM,MACtBJ,EAAAC,EAAAC,cAAA,KAAGG,KAAMN,EAAKO,IAAKC,OAAO,SAASC,IAAI,sBAAsBL,UAAWL,EAAQG,GAC9ED,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAME,UAAWL,EAAQY,MACvBV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,UAAU,MACVC,IAAKf,EAAKgB,MACVZ,UAAWL,EAAQkB,MACnBC,OAAO,MACPC,MAAOnB,EAAKoB,YAAc,WAC1BJ,MAAOhB,EAAKgB,QAEdf,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,KACED,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYqB,cAAY,EAACC,QAAQ,KAAKV,UAAU,MAC/Cd,EAAKgB,OAENf,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYY,UAAU,KACrBd,EAAKyB,aAAezB,EAAK0B,WAI9BzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACED,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,MAAOC,iBAAO9B,EAAK+B,YAAa,qBAChC3B,UAAWL,EAAQiC,KACnBC,MAAM,uBA9BCC,IAAMC,WA4CdC,uBApEA,CACb/B,KAAM,CACJgC,SAAU,EACVC,OAAQ,QAEVC,KAAM,CACJF,SAAU,GAEZG,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfxC,EAAG,CACDyC,eAAgB,mBAElBhC,KAAM,CACJiC,SAAU,KAEZ3B,MAAO,CAEL4B,UAAW,QACXC,UAAW,UA+CAV,CAAmBzC,qBC1E5BoD,EAAiB,CACrBC,mBAAoB,KAQhBC,mLAEK,IAAArD,EACoBC,KAAKC,MAAxBoD,EADDtD,EACCsD,MAAOnD,EADRH,EACQG,QAEToD,EAAQD,EAAME,IAAI,SAACpD,EAAKqD,GAC5B,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,CAAUC,IAAKF,EAAOrD,KAAMA,MAGrC,OACEC,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CACEE,UAAWL,EAAQ0D,KACnBC,QAASX,GAERI,UAdWjB,IAAMC,WA0BXC,uBA/BA,CACbqB,KAAM,CACJE,QAAS,MA6BEvB,CAAmBa,2ECtB5BW,uLACSC,GACXhE,KAAKC,MAAMgE,aAAaD,oCAGjB,IAAAE,EAAAlE,KACCE,EAAYF,KAAKC,MAAjBC,QAER,OACIE,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAQ+D,SAAS,UACfhE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,KACED,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CACEkE,QAAS,kBAAML,EAAKD,cAAa,IACjC1D,UAAWL,EAAQyC,WAAYP,MAAM,UAAUoC,aAAW,QAC1DpE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,OAEFD,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYsB,QAAQ,KAAKS,MAAM,UAAU7B,UAAWL,EAAQwC,MAA5D,qBAhBSL,IAAMC,WA8BZC,uBAxCA,CACbG,KAAM,CACJF,SAAU,GAEZG,WAAY,CACVC,YAAa,GACbC,YAAa,KAkCFN,CAAmBwB,qKC9B5BW,wLACSV,GACXhE,KAAKC,MAAMgE,aAAaD,0CAGXW,GACbC,QAAQC,IAAIF,GACZ3E,KAAKC,MAAM6E,eAAeH,oCAGnB,IAAAT,EAAAlE,KACCE,EAAYF,KAAKC,MAAjBC,QAEF6E,EACJ3E,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ8E,MACtB5E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,KACED,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,CACE8E,QAAM,EACNzB,IAAI,WACJa,QAAS,kBAAML,EAAKY,eAAe,kBACnC1E,EAAAC,EAAAC,cAAC8E,GAAA/E,EAAD,KAAcD,EAAAC,EAAAC,cAAC+E,GAAAhF,EAAD,OACdD,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,CAAckF,QAAQ,cAExBnF,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,CACE8E,QAAM,EACNzB,IAAI,aACJa,QAAS,kBAAML,EAAKY,eAAe,gBACnC1E,EAAAC,EAAAC,cAAC8E,GAAA/E,EAAD,KAAcD,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,OACdD,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,CAAckF,QAAQ,iBAG1BnF,EAAAC,EAAAC,cAACmF,GAAApF,EAAD,OAIJ,OACED,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAQsF,KAAM3F,KAAKC,MAAM2F,KAAMC,QAAS,kBAAM3B,EAAKD,cAAa,KAC9D7D,EAAAC,EAAAC,cAAA,OACEwF,SAAU,EACVC,KAAK,SACLxB,QAAS,kBAAML,EAAKD,cAAa,IACjC+B,UAAW,kBAAM9B,EAAKD,cAAa,KAEpCc,WA3CmB1C,IAAMC,WAyDnBC,wBA/DA,CACbyC,KAAM,CACJ5C,MAAO,UA6DIG,CAAmBmC,yBC3D5BuB,GAAQC,yBAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPd,QAASe,OAIPC,GAAa,CACjBC,aAAc,gBACdC,WAAY,cAKRC,GAAY,SAAC/B,GACjB,OAAOgC,IAAMC,IAAN,0BAAAC,OAAoClC,EAApC,yBAAAkC,OAHM,4CAIVC,KAAK,SAAAC,GAAG,OAAIA,IACZC,MAAM,SAAAC,GAAK,OAAIrC,QAAQqC,MAAM,wBAAyBA,MAGrDC,eACJ,SAAAA,EAAYjH,GAAO,IAAAiE,EAAA,OAAAiD,OAAAC,EAAA,EAAAD,CAAAnH,KAAAkH,IACjBhD,EAAAiD,OAAAE,EAAA,EAAAF,CAAAnH,KAAAmH,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvH,KAAMC,KACDgE,aAAeC,EAAKD,aAAauD,KAAlBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAjD,KACpBA,EAAKY,eAAiBZ,EAAKY,eAAe0C,KAApBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAjD,KACtBA,EAAKwD,MAAQ,CACXrE,MAAO,GACPuC,MAAM,EACN+B,SAAS,GAPMzD,mFAWC,IAAA0D,EAAA5H,KAClB0G,GAAUH,GAAWC,cAAcM,KAAK,SAAAC,GACtC,GAAkB,MAAfA,EAAIc,OAAgB,CACrB,IAAMxE,EAAQ0D,EAAIe,KAAKC,SACvBH,EAAKI,SAAS,CAAE3E,MAAOA,EAAOsE,SAAS,4CAK/BhC,GACZ3F,KAAKgI,SAAS,CACZpC,KAAMD,2CAIKhB,GAAO,IAAAsD,EAAAjI,KACfuG,GAAW5B,KAChB3E,KAAKgI,SAAS,CAAEL,SAAS,IACzBjB,GAAUH,GAAW5B,IAAQmC,KAAK,SAAAC,GAChC,GAAkB,MAAfA,EAAIc,OAAgB,CACrB,IAAMxE,EAAQ0D,EAAIe,KAAKC,SACvBE,EAAKD,SAAS,CAAE3E,MAAOA,EAAOsE,SAAS,yCAKpC,IACCzH,EAAYF,KAAKC,MAAjBC,QACAmD,EAAUrD,KAAK0H,MAAfrE,MAER,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQM,MACtBJ,EAAAC,EAAAC,cAAC4H,EAAA,iBAAD,CAAkBjC,MAAOA,IACvB7F,EAAAC,EAAAC,cAAC6H,GAAD,CAAevC,KAAM5F,KAAK0H,MAAM9B,KAAM3B,aAAcjE,KAAKiE,aAAca,eAAgB9E,KAAK8E,iBAC5F1E,EAAAC,EAAAC,cAAC8H,EAAD,CAAQnE,aAAcjE,KAAKiE,eAC1BjE,KAAK0H,MAAMC,SAAWvH,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAgB+B,MAAM,cAC7ChC,EAAAC,EAAAC,cAACgI,EAAD,CAAOjF,MAAOA,aAhDNhB,IAAMC,WA2DTC,wBAvFA,CACb/B,KAAM,CACJgC,SAAU,IAqFCD,CAAmB2E,ICtFdqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzI,EAAAC,EAAAC,cAACwI,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.17cbfb9e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { format } from 'date-fns';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    margin: '15px',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  a: {\n    textDecoration: 'none !important',\n  },\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover',\n    minHeight: '300px'\n  },\n};\nclass NewsCard extends React.Component {\n  render() {\n    const { classes, post } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt={post.title}\n                className={classes.media}\n                height=\"140\"\n                image={post.urlToImage || 'news.png'}\n                title={post.title}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {post.title}\n                </Typography>\n                <Typography component=\"p\">\n                {post.description || post.content}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Chip\n                label={format(post.publishedAt, 'DD.MM.YYYY. HH:mm')}\n                className={classes.chip}\n                color=\"primary\" />\n            </CardActions>\n          </Card>\n        </a>\n      </div>\n    );\n  }\n}\n\nNewsCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NewsCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NewsCard from './NewsCard';\nimport Masonry from 'react-masonry-component';\n\nconst masonryOptions = {\n  transitionDuration: 200\n};\n\nconst styles = {\n  grid: {\n    padding: '0',\n  },\n};\nclass Posts extends React.Component {\n\n  render() {\n    const { posts, classes } = this.props;\n\n    const cards = posts.map((post,index) => {\n      return <NewsCard key={index} post={post}></NewsCard>\n    });\n\n    return (\n      <Masonry\n        className={classes.grid}\n        options={masonryOptions}\n      >\n        {cards}\n      </Masonry>\n    );\n  }\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\n\nexport default withStyles(styles)(Posts);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass Header extends React.Component {\n  toggleDrawer(flag){\n    this.props.toggleDrawer(flag);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              onClick={() => this.toggleDrawer(true)}\n              className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Hacknewz\n            </Typography>\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LineStyleIcon from '@material-ui/icons/LineStyle';\nimport StarIcon from '@material-ui/icons/Grade';\n\nconst styles = {\n  list: {\n    color: 'black',\n  },\n};\n\nclass SidebarDrawer extends React.Component {\n  toggleDrawer(flag){\n    this.props.toggleDrawer(flag);\n  }\n\n  fetchFromRoute(route){\n    console.log(route);\n    this.props.fetchFromRoute(route);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <ListItem\n            button\n            key=\"Featured\"\n            onClick={() => this.fetchFromRoute('topHeadlines')}>\n            <ListItemIcon><StarIcon/></ListItemIcon>\n            <ListItemText primary=\"Featured\" />\n          </ListItem>\n          <ListItem\n            button\n            key=\"Everything\"\n            onClick={() => this.fetchFromRoute('everything')}>\n            <ListItemIcon><LineStyleIcon/></ListItemIcon>\n            <ListItemText primary=\"Everything\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </div>\n    );\n\n    return (\n      <Drawer open={this.props.left} onClose={() => this.toggleDrawer(false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={() => this.toggleDrawer(false)}\n          onKeyDown={() => this.toggleDrawer(false)}\n        >\n        {sideList}\n        </div>\n      </Drawer>\n    )\n  }\n}\n\nSidebarDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  fetchFromRoute: PropTypes.func.isRequired,\n  left: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(SidebarDrawer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport axios from 'axios';\nimport Posts from './components/PostsGrid';\nimport Header from './components/Header';\nimport SidebarDrawer from './components/SidebarDrawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n\nconst newsRoutes = {\n  topHeadlines: 'top-headlines',\n  everything: 'everything',\n};\n\nconst apiKey = 'apiKey=5538d8992f5e49658189f457315657ca';\n\nconst fetchNews = (route) => {\n  return axios.get(`https://newsapi.org/v2/${route}?sources=hacker-news&${apiKey}`)\n    .then(res => res)\n    .catch(error => console.error('Error loading news:\\n', error));\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.fetchFromRoute = this.fetchFromRoute.bind(this);\n    this.state = {\n      posts: [],\n      left: false,\n      loading: true,\n    }\n  }\n\n  componentDidMount() {\n    fetchNews(newsRoutes.topHeadlines).then(res => {\n      if(res.status === 200) {\n        const posts = res.data.articles;\n        this.setState({ posts: posts, loading: false });\n      }\n    });\n  };\n\n  toggleDrawer (open) {\n    this.setState({\n      left: open,\n    });\n  };\n\n  fetchFromRoute(route) {\n    if (!newsRoutes[route]) return;\n    this.setState({ loading: true });\n    fetchNews(newsRoutes[route]).then(res => {\n      if(res.status === 200) {\n        const posts = res.data.articles;\n        this.setState({ posts: posts, loading: false });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { posts } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <MuiThemeProvider theme={theme}>\n          <SidebarDrawer left={this.state.left} toggleDrawer={this.toggleDrawer} fetchFromRoute={this.fetchFromRoute}/>\n          <Header toggleDrawer={this.toggleDrawer} />\n          {this.state.loading && <LinearProgress color=\"secondary\" />}\n          <Posts posts={posts} />\n        </MuiThemeProvider>\n      </div>\n    );\n  };\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}